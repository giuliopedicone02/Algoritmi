Titolo
Il problema dello zaino con peso unitario

Introduzione
Il problema dello zaino, conosciuto anche con il nome di Knapsack problem, è un problema di ottimizzazione combinatoria formulato nel modo seguente.
Sia dato uno zaino che possa sopportare un determinato peso P. Siano dati inoltre N oggetti, ognuno dei quali è caratterizzato da un peso e un valore. Il problema si propone di scegliere quali di questi oggetti mettere nello zaino per ottenere un sottoinsieme di maggiore valore senza eccedere il peso sostenibile dallo zaino stesso.
Nel problema dello zaino con peso unitario si presuppone che tutti gli oggetti abbiano peso pari a 1.

Specifiche
Si fornisca il codice di un algoritmo, basato sulla programmazione greedy, che, preso in input l'insieme degli N oggetti sia in grado di determinare il valore massimale che è possibile ottenere con un sottoinsieme degli N oggetti che non abbia un peso complessivo superiore al peso P sopportabile dalla zaino.
Per ogni oggetto i, con i = 0 ... N-1, si supponga che il peso dell'oggetto sia dato da G[i] e il suo valore sia dato da V[i].

Dati di input
L'input è suddiviso in 100 task, uno per ogni riga. Ogni riga del file di input è formata da N+2 elementi. I primi due elementi rappresentano il numero N degli oggetti disponibili, ognuno dei quali ha peso unitario, e il peso massimo P sopportabile dallo zaino. Segue la lista degli N valori V[i] associati a ciascuno degli N oggetti.

Dati di output
L'output dovrà  essere formato da 100 righe, una per ogni task. Ogni riga contiene un unico elemento, ovvero il valore massimale che è possibile selezionare.

Note
Il valore di ciascun oggetto è sempre un intero compreso tra 5 e 1000.
N è sempre un valore intero compreso tra 5 e 1000.


Esempio
Il seguente esempio presenta un file di input, contenente 3 task, ed il corrispondente file di output.

input.txt:
10 8 9 13 18 10 12 4 18 3 9 0 
10 6 12 2 7 3 7 9 0 12 3 9 
14 6 23 17 11 3 6 2 3 16 0 20 25 26 20 23 

output.txt
93
56
137